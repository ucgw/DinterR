--- /home/dinter/csce499/linux-4.19.143/fs/read_write.c.orig	2020-12-15 22:08:28.363252065 -0600
+++ /home/dinter/csce499/linux-4.19.143/fs/read_write.c	2020-12-20 19:55:29.603035842 -0600
@@ -20,6 +20,7 @@
 #include <linux/compat.h>
 #include <linux/mount.h>
 #include <linux/fs.h>
+#include <linux/kernel.h>  /* abs macro */
 #include "internal.h"
 
 #include <linux/uaccess.h>
@@ -451,7 +452,8 @@
 			count =  MAX_RW_COUNT;
 		ret = __vfs_read(file, buf, count, pos);
 		if (ret > 0) {
-			fsnotify_access(file);
+                        loff_t pdif = *pos - file->f_pos;
+			fsnotify_access(file, count, abs((long long)pdif));
 			add_rchar(current, ret);
 		}
 		inc_syscr(current);
@@ -924,8 +926,10 @@
 	else
 		ret = do_loop_readv_writev(file, iter, pos, READ, flags);
 out:
-	if (ret >= 0)
-		fsnotify_access(file);
+	if (ret >= 0) {
+                loff_t pdif = *pos - file->f_pos;
+		fsnotify_access(file, tot_len, abs(pdif));
+        }
 	return ret;
 }
 
@@ -1379,6 +1383,7 @@
 	struct inode *in_inode, *out_inode;
 	loff_t pos;
 	loff_t out_pos;
+        loff_t pdif;
 	ssize_t retval;
 	int fl;
 
@@ -1450,7 +1455,8 @@
 	if (retval > 0) {
 		add_rchar(current, retval);
 		add_wchar(current, retval);
-		fsnotify_access(in.file);
+                pdif = *ppos - in.file->f_pos;
+		fsnotify_access(in.file, count, abs(pdif));
 		fsnotify_modify(out.file);
 		out.file->f_pos = out_pos;
 		if (ppos)
@@ -1616,7 +1622,8 @@
 
 done:
 	if (ret > 0) {
-		fsnotify_access(file_in);
+                loff_t pdif = pos_in - file_in->f_pos;
+		fsnotify_access(file_in, len, abs(pdif));
 		add_rchar(current, ret);
 		fsnotify_modify(file_out);
 		add_wchar(current, ret);
@@ -1900,7 +1907,8 @@
 	ret = file_in->f_op->clone_file_range(file_in, pos_in,
 			file_out, pos_out, len);
 	if (!ret) {
-		fsnotify_access(file_in);
+                loff_t pdif = pos_in - file_in->f_pos;
+		fsnotify_access(file_in, len, abs(pdif));
 		fsnotify_modify(file_out);
 	}
 
